#
# Usage: source workit
#       (or just `. workit`)
#
# If WORKON_HOME is set in the environment, use the basename of the
# current directory, and then each of its parent directories, and try
# to find a matching Virtualenv to activate. Failing that, look for a
# bin/activate file off the current directory and then each of its
# parents, and source the first one found.
# 
# This is a convenience command intended to compliment the `workon`
# command that comes with Virtualenvwrapper.
#
########################################################################
# Originally packaged under the BSD 2-Clause License at
# https://github.com/hipikat/dotfiles by Adam Wright <adam@hipikat.org>


# Source a virtual environment's activate script, if that environment
# doesn't look like it's already the active on. (Takes the full path
# to a virtualenv 'activate' script.)
function _source_virtualenv() {
    env_dir="${1%/*/*}"
    env_name="${env_dir##*/}"
    if [ "$env_dir" != "$VIRTUAL_ENV" ]; then
        echo "Activating virtualenv environment '$env_name'."
        source "$1"
    fi
}

current_dir=$(pwd)

# Set default WORKON_HOME if it's unset and the default Virtualenvwrapper
# directory for environments exists in the user's home directory
if [ -d "$HOME/.virtualenvs" ] && [ -z "$WORKON_HOME" ]; then
    WORKON_HOME=$HOME/.virtualenvs
fi

# Check for likely matching environments created by Virtualenvwrapper
if [ -n "$WORKON_HOME" ]; then
    while [ -n "$current_dir" ]; do
        if [ -f "$WORKON_HOME/$(basename $current_dir)/bin/activate" ]; then
            _source_virtualenv "$WORKON_HOME/$(basename $current_dir)/bin/activate"
            sourced_activate="true"
            break
        else
            current_dir="${current_dir%/*}"
        fi
    done
fi

# Check up through parent directories, to see if we're buried in a Virtualenv
current_dir=$(pwd)
if [ "$sourced_activate" != "true" ]; then
    while [ -n "$current_dir" ]; do
        if [ -f "$current_dir/bin/activate" ]; then
            _source_virtualenv "$current_dir/bin/activate"
            sourced_activate="true"
            break
        else
            current_dir="${current_dir%/*}"
        fi
    done
fi

# Check up through parent directories for a hidden '.venv/' Virtualenv
current_dir=$(pwd)
if [ "$sourced_activate" != "true" ]; then
    while [ -n "$current_dir" ]; do
        if [ -f "$current_dir/.venv/bin/activate" ]; then
            _source_virtualenv "$current_dir/.venv/bin/activate"
            sourced_activate="true"
            break
        else
            current_dir="${current_dir%/*}"
        fi
    done
fi

# Warn if we didn't source anything. Don't exit. Because we're sourced too.
if [ "$sourced_activate" != "true" ]; then 
    echo "Failed to locate an activate script" 1>&2
else
    unset sourced_activate
fi

