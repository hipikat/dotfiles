# Usage: `source workit` (or `. workit`)
#
# If WORKON_HOME is set in the environment, use the basename of the
# current directory, and then each of its parent directories, and try
# to find a matching Virtualenv to activate. Failing that, look for a
# bin/activate file off the current directory and then each of its
# parents, and source the first one found.
# 
# This is a convenience command intended to compliment the `workon`
# command that comes with Virtualenvwrapper.
#
########################################################################
# Copyright Â© 2015, Adam Wright <adam@hipikat.org>
# All rights reserved. But here's the BSD 2-Clause License:
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Check for likely matching environments created by Virtualenvwrapper
current_dir="$PWD"
if [ -n "$WORKON_HOME" ]; then
    while [ -n "$current_dir" ]; do
        if [ -f "$WORKON_HOME/$(basename $current_dir)/bin/activate" ]; then
            echo "Sourcing $WORKON_HOME/$(basename $current_dir)/bin/activate"
            . "$WORKON_HOME/$(basename $current_dir)/bin/activate"
            sourced_activate="true"
            break
        else
            current_dir="${current_dir%/*}"
        fi
    done
fi

# Check up through parent directories, to see if we're buried in a Virtualenv
current_dir="$PWD"
if [ "$sourced_activate" != "true" ]; then
    while [ -n "$current_dir" ]; do
        if [ -f "$current_dir/bin/activate" ]; then
            echo "Sourcing $current_dir/bin/activate"
            . "$current_dir/bin/activate"
            sourced_activate=true
            break
        else
            current_dir="${current_dir%/*}"
        fi
    done
fi

# Check for a system-wide Virtualenv
if [ -f "/bin/activate" ] && [ "$sourced_activate" != "true" ]; then
    echo "Sourcing /bin/activate"
    . /bin/activate
fi

# Warn if we didn't source anything. Don't exit, because we're sourced.
if [ "$sourced_activate" != "true" ]; then 
    echo "Failed to locate an activate script"
fi
